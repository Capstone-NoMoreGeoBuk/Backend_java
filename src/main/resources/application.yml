spring:

  profiles:
    active: dev

  application:
    name: back-java

  config:
    import: optional:file:.env

  jpa:
    hibernate:
      ddl-auto: validate   # [none | validate | update | create | create-drop]
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        highlight_sql: true
        use_sql_comments: true
        use-new-id-generator-mappings: true

  datasource:
    hikari:
      auto-commit: false

  jackson:
    serialization:
      fail-on-empty-beans: false

  security:
    oauth2:
      client:
        registration:
          kakao:
            clientId: ${KAKAO_OAUTH2_CLIENT_ID}
            scope: profile_nickname # 카카오 닉네임만 가져옴
            client-name: Kakao
            authorization-grant-type: authorization_code
            redirect-uri: '${custom.site.backUrl}/{action}/oauth2/code/{registrationId}'
          google:
            client-id: ${GOOGLE_OAUTH2_CLIENT_ID}
            client-secret: ${GOOGLE_OAUTH2_CLIENT_SECRET}
            redirect-uri: '${custom.site.backUrl}/{action}/oauth2/code/{registrationId}'
            client-name: Google
            scope: profile
          naver:
            client-id: ${NAVER_OAUTH2_CLIENT_ID}
            client-secret: ${NAVER_OAUTH2_CLIENT_SECRET}
            scope: profile_nickname # 네이버 닉네임만 가져옴
            client-name: Naver
            authorization-grant-type: authorization_code
            redirect-uri: '${custom.site.backUrl}/{action}/oauth2/code/{registrationId}'
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response


custom:
  dev:
    cookieDomain: localhost
    frontUrl: "http://${custom.dev.cookieDomain}:3000"
    backUrl: "http://${custom.dev.cookieDomain}:${server.port}"
  prod:
    cookieDomain: ${BASE_URL}
    frontUrl: "https://www.${custom.prod.cookieDomain}"
    backUrl: "https://api.${custom.prod.cookieDomain}"
  site:
    cookieDomain: ${custom.dev.cookieDomain}
    frontUrl: ${custom.dev.frontUrl}
    backUrl: ${custom.dev.backUrl}
    name: ssoul
  jwt:
    secretKey: ${JWT_SECRET_KEY}
  accessToken:
    expirationSeconds: "#{60*15}"
  refreshToken:
    expirationSeconds: "#{60*60*24*30}"
    idleTimeoutHours: "#{60*6*4}"

springdoc:
  default-produces-media-type: application/json;charset=UTF-8

server:
  port: 8080
  forward-headers-strategy: native
  servlet:
    encoding:
      charset: UTF-8
      enabled: true
      force: true